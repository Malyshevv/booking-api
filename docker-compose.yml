version: "3.9"

networks:
  leadhotel_network:
    driver: bridge

services:
  rabbitmq:
    networks:
      - leadhotel_network
    image: 'rabbitmq:management'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${RABBITMQ_PORT_QUEUE}:${RABBITMQ_PORT_QUEUE}
      - ${RABBITMQ_PORT_UI}:${RABBITMQ_PORT_UI}
    env_file:
      - .env
  redis:
    image: 'bitnami/redis:latest'
    networks:
      - leadhotel_network
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    links:
      - redis-commander
    env_file:
      - .env
  redis-commander:
    image: rediscommander/redis-commander:latest
    networks:
      - leadhotel_network
    restart: always
    environment:
      - HTTP_USER=${REDIS_CMD_HTTP_USER}
      - HTTP_PASSWORD=${REDIS_CMD_HTTP_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=redis:${REDIS_PORT}
      - REDIS_HOSTS=redis
    ports:
      - ${REDIS_UI_PORT}:${REDIS_UI_PORT}
    env_file:
      - .env
  postgres:
    image: postgres
    networks:
      - leadhotel_network
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    env_file:
      - .env
  backend-app:
    networks:
      - leadhotel_network
    depends_on:
      - postgres
      - redis
      - rabbitmq
    build: ./
    restart: unless-stopped
    env_file: .env
    ports:
      - ${NODE_SERVER_PORT}:${NODE_SERVER_PORT}
    environment:
      - NODE_SERVER_PORT_HTTPS=$NODE_SERVER_PORT_HTTPS
      - NODE_SERVER_PORT=$NODE_SERVER_PORT
      - NODE_SERVER_HOST=$NODE_SERVER_HOST
      - NODE_USE_HTTPS=$NODE_USE_HTTPS
    volumes:
      - ./:/var/app
    stdin_open: true
    tty: true
